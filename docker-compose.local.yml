version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: stripeflow-postgres-local
    environment:
      POSTGRES_DB: stripeflow
      POSTGRES_USER: stripeflow
      POSTGRES_PASSWORD: stripeflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/main/resources/db/migration:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stripeflow -d stripeflow"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - stripeflow-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: stripeflow-redis-local
    command: redis-server --appendonly yes --requirepass redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - stripeflow-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: stripeflow-backend-local
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/stripeflow
      SPRING_DATASOURCE_USERNAME: stripeflow
      SPRING_DATASOURCE_PASSWORD: stripeflow
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_PASSWORD: redis
      SPRING_FLYWAY_URL: jdbc:postgresql://postgres:5432/stripeflow
      SPRING_FLYWAY_USER: stripeflow
      SPRING_FLYWAY_PASSWORD: stripeflow
      JAVA_OPTS: -Xmx512m -Xms256m
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - stripeflow-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: stripeflow-frontend-local
    environment:
      VITE_API_URL: http://localhost:8080/api
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - stripeflow-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  stripeflow-network:
    driver: bridge
