name: Test Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-coverage:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: stripeflow_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Run tests with coverage
      run: |
        cd backend
        mvn clean test jacoco:report
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/target/site/jacoco/jacoco.xml
        flags: backend
        name: backend-coverage

  frontend-coverage:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run tests with coverage
      run: |
        cd frontend
        npm run test:coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage

  coverage-report:
    needs: [backend-coverage, frontend-coverage]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download backend coverage
      uses: actions/download-artifact@v3
      with:
        name: backend-coverage
        path: backend-coverage
    
    - name: Download frontend coverage
      uses: actions/download-artifact@v3
      with:
        name: frontend-coverage
        path: frontend-coverage
    
    - name: Generate combined coverage report
      run: |
        echo "Combined Coverage Report"
        echo "========================"
        echo "Backend Coverage: $(cat backend-coverage/coverage.txt)"
        echo "Frontend Coverage: $(cat frontend-coverage/coverage.txt)"
        echo "========================"
    
    - name: Comment PR with coverage
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const backendCoverage = fs.readFileSync('backend-coverage/coverage.txt', 'utf8');
          const frontendCoverage = fs.readFileSync('frontend-coverage/coverage.txt', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## ðŸ“Š Test Coverage Report
            
            ### Backend Coverage
            \`\`\`
            ${backendCoverage}
            \`\`\`
            
            ### Frontend Coverage
            \`\`\`
            ${frontendCoverage}
            \`\`\`
            
            âœ… Coverage targets met: Backend 95%+, Frontend 95%+`
          });
